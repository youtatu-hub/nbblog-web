{"version":3,"sources":["webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/lazy-result.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/rule.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/postcss.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/css-syntax-error.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/parser.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/list.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/result.js","webpack:///./node_modules/sanitize-html/index.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/stringifier.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/comment.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/parse.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/warning.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/declaration.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/document.js","webpack:///./node_modules/sanitize-html/node_modules/is-plain-object/dist/is-plain-object.mjs","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/processor.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/input.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/tokenize.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/root.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/warn-once.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/map-generator.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/node.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/no-work-result.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/symbols.js","webpack:///./node_modules/sanitize-html/node_modules/deepmerge/dist/cjs.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/previous-map.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/stringify.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/fromJSON.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/at-rule.js","webpack:///./node_modules/sanitize-html/node_modules/postcss/lib/container.js"],"names":["Container","Document","MapGenerator","parse","Result","Root","stringify","isClean","my","TYPE_TO_CLASS_NAME","atrule","comment","decl","document","root","rule","PLUGIN_PROPS","AtRule","AtRuleExit","Comment","CommentExit","Declaration","DeclarationExit","DocumentExit","Once","OnceExit","postcssPlugin","prepare","RootExit","Rule","RuleExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","node","key","type","prop","toLowerCase","name","append","toStack","events","eventIndex","iterator","visitorIndex","visitors","cleanMarks","nodes","forEach","i","postcss","LazyResult","processor","css","opts","this","stringified","processed","map","inline","prev","parser","syntax","error","rebuild","result","helpers","plugins","plugin","Promise","reject","resolve","processing","runAsync","onRejected","async","catch","onFinally","Error","lastPlugin","addToError","postcssVersion","setMessage","err","console","listeners","add","cb","push","event","test","version","filter","hasListener","Object","keys","length","promise","runOnRoot","handleError","prepareVisitors","stack","visitTick","e","visitor","roots","subRoot","all","sync","str","stringifier","data","generate","getAsyncError","walkSync","visitSync","onFulfilled","proxyOf","parent","visit","pop","toProxy","child","indexes","getIterator","each","warnings","content","messages","get","Symbol","toStringTag","registerPostcss","dependant","module","exports","default","registerLazyResult","list","defaults","super","comma","selector","values","match","sep","raw","join","registerRule","CssSyntaxError","fromJSON","Input","Node","Processor","Warning","Array","isArray","initializer","cache","warningPrinted","creator","args","warn","LANG","startsWith","transformer","defineProperty","process","processOpts","pluginOpts","atRule","pico","terminalHighlight","message","line","column","source","file","reason","endLine","endColumn","captureStackTrace","color","isColorSupported","aside","text","mark","highlight","bold","gray","red","createColors","lines","split","start","Math","max","end","min","maxWidth","String","slice","index","number","gutter","padding","subLineStart","subLineEnd","subLine","spacing","replace","code","showSourceCode","tokenizer","SAFE_COMMENT_NEIGHBOR","empty","space","findLastWithPosition","tokens","token","pos","Parser","input","current","spaces","semicolon","createTokenizer","offset","shift","unnamedAtrule","init","last","open","params","brackets","endOfFile","nextToken","getPosition","raws","between","spacesAndCommentsFromEnd","afterName","spacesAndCommentsFromStart","colon","founded","j","element","entries","doubleColon","left","right","customProperty","unknownWord","before","next","firstSpaces","precheckMissedSemicolon","important","string","stringFrom","spacesFromEnd","trim","hasWord","some","concat","value","includes","checkMissedSemicolon","after","unexpectedClose","unclosedBlock","position","ownSemicolon","fromOffset","col","bracket","back","unclosedBracket","freeSemicolon","emptyRule","other","endFile","clean","reduce","lastTokenType","from","splice","separators","array","func","inQuote","prevQuote","escape","letter","undefined","warning","htmlparser","escapeStringRegexp","klona","isPlainObject","deepmerge","parseSrcset","postcssParse","mediaTags","vulnerableTags","has","hasOwnProperty","call","a","n","v","isEmptyObject","stringifySrcset","parsedSrcset","part","url","w","h","d","sanitizeHtml","VALID_HTML_ATTRIBUTE_NAME","html","options","_recursing","tempResult","Frame","tag","attribs","that","tagPosition","mediaChildren","updateParentNodeText","parentFrame","updateParentNodeMediaChildren","assign","htmlParserDefaults","allowedTags","indexOf","allowVulnerableTags","nonTextTagsArray","nonTextTags","allowedAttributesMap","allowedAttributesGlobMap","allowedAttributes","attributes","globRegex","RegExp","allowedClassesMap","allowedClasses","classes","transformTagsMap","transformTagsAll","depth","skipMap","transformMap","skipText","skipTextDepth","transformTags","transform","transFun","simpleTransform","addedText","initializeState","onopentag","enforceHtmlBoundary","frame","skip","hasText","transformedTag","innerText","tagName","disallowedTagsMode","nestingLimit","parsed","passedAllowedAttributesMapCheck","o","newValue","multiple","splitStrArray","s","allowedSchemesAppliedToAttributes","naughtyHref","allowed","base","URL","isRelativeUrl","hostname","protocol","allowIframeRelativeUrls","allowedIframeHostnames","allowedIframeDomains","allowedHostname","find","allowedDomain","domain","endsWith","evil","allowedSpecificClasses","allowedWildcardClasses","filterClasses","abstractSyntaxTree","filteredAST","filterCss","allowedStyles","stringifyStyleAttributes","escapeHtml","selfClosing","textFilter","ontext","lastFrame","escaped","onclosetag","exclusiveFilter","substr","write","quote","decodeEntities","href","matches","allowProtocolRelative","scheme","allowedSchemesByTag","allowedSchemes","astRules","selectedRule","filterDeclarations","extractedAttributes","attributeObject","allowedDeclarationsList","matchesRegex","regularExpression","clss","img","newTagName","newAttribs","merge","attrib","DEFAULT_RAW","beforeClose","beforeComment","beforeDecl","beforeOpen","beforeRule","commentLeft","commentRight","emptyBody","indent","capitalize","toUpperCase","Stringifier","builder","rawValue","block","detect","buf","step","body","own","first","rawCache","beforeAfter","method","walk","walkComments","walkDecls","p","parts","registerParse","range","rangeBy","opt","word","lazy","registerProcessor","isObject","prototype","toString","ctor","prot","constructor","NoWorkResult","normalize","normalized","nanoid","isAbsolute","SourceMapConsumer","SourceMapGenerator","fileURLToPath","pathToFileURL","PreviousMap","fromOffsetCache","sourceMapAvailable","Boolean","pathAvailable","hasBOM","consumer","mapResolve","id","origin","lastLine","lineToIndex","prevIndex","l","mid","sourceRoot","to","fromUrl","originalPositionFor","mapFile","sourceContentFor","json","consumerCache","registerInput","SINGLE_QUOTE","charCodeAt","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","currentToken","escapePos","valueOf","ignore","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","fromCharCode","lastIndex","charAt","sample","removeChild","registerRoot","printed","dirname","relative","cssString","mapOpts","originalCSS","usesFileUrls","absolute","memoizedFileURLs","Map","memoizedPaths","memoizedURLs","isInline","toBase64","annotation","outputFile","eol","previous","toUrl","path","sourcesContent","applySourceMap","clearAnnotation","isMap","generateMap","generateString","fromSourceMap","ignoreInvalidMapping","addMapping","generated","original","isSourcesContent","setSourcesContent","applyPrevMaps","isAnnotation","addAnnotation","noSource","mapping","sourcePath","lastIndexOf","childless","withContent","cached","set","previousMaps","already","toFileUrl","setSourceContent","Buffer","window","btoa","unescape","encodeURIComponent","fileURL","encodeURI","cloneNode","cloned","sourceOffset","inputCSS","clone","postcssNode","insertAfter","overrides","insertBefore","keepBetween","markDirty","positionInside","stringRepresentation","endIndex","defaultType","bookmark","foundSelf","remove","_","inputs","fixed","emitInputs","inputsNextIndex","toJSON","inputId","proxyCache","Proxy","getProxyProcessor","_processor","_css","_opts","_map","self","generatedCSS","generatedMap","_root","isMergeableObject","isNonNullObject","isSpecial","stringValue","isReactElement","canUseSymbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","cloneUnlessOtherwiseSpecified","defaultArrayMerge","target","getMergeFunction","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","symbol","propertyIsEnumerable","getKeys","propertyIsOnObject","object","property","propertyIsUnsafe","mergeObject","destination","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","deepmerge_1","existsSync","readFileSync","fromBase64","atob","loadAnnotation","startWith","loadMap","baseCharsetUri","baseUri","charsetUri","uri","uriMatch","decodeURIComponent","baseUriMatch","encoding","sourceMapString","mappings","_mappings","sections","comments","getAnnotationURL","substring","JSON","prevPath","loadFile","decodeInline","ownInputs","inputHydrated","__proto__","children","prepend","registerAtRule","cleanSource","markTreeDirty","cleanRaws","callback","condition","every","lastEach","exist","existIndex","reverse","selectors","unshift","pattern","props","fast","setPrototypeOf"],"mappings":"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","file":"js/npm.sanitize-html~364370a1.874ce392.js","sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Document = require('./document')\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nlet Result = require('./result')\nlet Root = require('./root')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\nlet warnOnce = require('./warn-once')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Container = require('./container')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet Document = require('./document')\nlet fromJSON = require('./fromJSON')\nlet Input = require('./input')\nlet LazyResult = require('./lazy-result')\nlet list = require('./list')\nlet Node = require('./node')\nlet parse = require('./parse')\nlet Processor = require('./processor')\nlet Result = require('./result.js')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet stringify = require('./stringify')\nlet Warning = require('./warning')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n\n    let aside = text => text\n    let mark = text => text\n    let highlight = text => text\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n      if (terminalHighlight) {\n        highlight = text => terminalHighlight(text)\n      }\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n    let maxWidth = String(end).length\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          if (line.length > 160) {\n            let padding = 20\n            let subLineStart = Math.max(0, this.column - padding)\n            let subLineEnd = Math.max(\n              this.column + padding,\n              this.endColumn + padding\n            )\n            let subLine = line.slice(subLineStart, subLineEnd)\n\n            let spacing =\n              aside(gutter.replace(/\\d/g, ' ')) +\n              line\n                .slice(0, Math.min(this.column - 1, padding - 1))\n                .replace(/[^\\t]/g, ' ')\n\n            return (\n              mark('>') +\n              aside(gutter) +\n              highlight(subLine) +\n              '\\n ' +\n              spacing +\n              mark('^')\n            )\n          }\n\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n\n          return (\n            mark('>') +\n            aside(gutter) +\n            highlight(line) +\n            '\\n ' +\n            spacing +\n            mark('^')\n          )\n        }\n\n        return ' ' + aside(gutter) + highlight(line)\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet tokenizer = require('./tokenize')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let prev, token, type\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().startsWith('!') && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().startsWith('!')) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","const htmlparser = require('htmlparser2');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst { klona } = require('klona');\nconst { isPlainObject } = require('is-plain-object');\nconst deepmerge = require('deepmerge');\nconst parseSrcset = require('parse-srcset');\nconst { parse: postcssParse } = require('postcss');\n// Tags that can conceivably represent stand-alone media.\nconst mediaTags = [\n  'img', 'audio', 'video', 'picture', 'svg',\n  'object', 'map', 'iframe', 'embed'\n];\n// Tags that are inherently vulnerable to being used in XSS attacks.\nconst vulnerableTags = [ 'script', 'style' ];\n\nfunction each(obj, cb) {\n  if (obj) {\n    Object.keys(obj).forEach(function (key) {\n      cb(obj[key], key);\n    });\n  }\n}\n\n// Avoid false positives with .__proto__, .hasOwnProperty, etc.\nfunction has(obj, key) {\n  return ({}).hasOwnProperty.call(obj, key);\n}\n\n// Returns those elements of `a` for which `cb(a)` returns truthy\nfunction filter(a, cb) {\n  const n = [];\n  each(a, function(v) {\n    if (cb(v)) {\n      n.push(v);\n    }\n  });\n  return n;\n}\n\nfunction isEmptyObject(obj) {\n  for (const key in obj) {\n    if (has(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction stringifySrcset(parsedSrcset) {\n  return parsedSrcset.map(function(part) {\n    if (!part.url) {\n      throw new Error('URL missing');\n    }\n\n    return (\n      part.url +\n      (part.w ? ` ${part.w}w` : '') +\n      (part.h ? ` ${part.h}h` : '') +\n      (part.d ? ` ${part.d}x` : '')\n    );\n  }).join(', ');\n}\n\nmodule.exports = sanitizeHtml;\n\n// A valid attribute name.\n// We use a tolerant definition based on the set of strings defined by\n// html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n// and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n// The characters accepted are ones which can be appended to the attribute\n// name buffer without triggering a parse error:\n//   * unexpected-equals-sign-before-attribute-name\n//   * unexpected-null-character\n//   * unexpected-character-in-attribute-name\n// We exclude the empty string because it's impossible to get to the after\n// attribute name state with an empty attribute name buffer.\nconst VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/;\n\n// Ignore the _recursing flag; it's there for recursive\n// invocation as a guard against this exploit:\n// https://github.com/fb55/htmlparser2/issues/105\n\nfunction sanitizeHtml(html, options, _recursing) {\n  let result = '';\n  // Used for hot swapping the result variable with an empty string in order to \"capture\" the text written to it.\n  let tempResult = '';\n\n  function Frame(tag, attribs) {\n    const that = this;\n    this.tag = tag;\n    this.attribs = attribs || {};\n    this.tagPosition = result.length;\n    this.text = ''; // Node inner text\n    this.mediaChildren = [];\n\n    this.updateParentNodeText = function() {\n      if (stack.length) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.text += that.text;\n      }\n    };\n\n    this.updateParentNodeMediaChildren = function() {\n      if (stack.length && mediaTags.includes(this.tag)) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.mediaChildren.push(this.tag);\n      }\n    };\n  }\n\n  options = Object.assign({}, sanitizeHtml.defaults, options);\n  options.parser = Object.assign({}, htmlParserDefaults, options.parser);\n\n  // vulnerableTags\n  vulnerableTags.forEach(function (tag) {\n    if (\n      options.allowedTags && options.allowedTags.indexOf(tag) > -1 &&\n      !options.allowVulnerableTags\n    ) {\n      console.warn(`\\n\\n⚠️ Your \\`allowedTags\\` option includes, \\`${tag}\\`, which is inherently\\nvulnerable to XSS attacks. Please remove it from \\`allowedTags\\`.\\nOr, to disable this warning, add the \\`allowVulnerableTags\\` option\\nand ensure you are accounting for this risk.\\n\\n`);\n    }\n  });\n\n  // Tags that contain something other than HTML, or where discarding\n  // the text when the tag is disallowed makes sense for other reasons.\n  // If we are not allowing these tags, we should drop their content too.\n  // For other tags you would drop the tag but keep its content.\n  const nonTextTagsArray = options.nonTextTags || [\n    'script',\n    'style',\n    'textarea',\n    'option'\n  ];\n  let allowedAttributesMap;\n  let allowedAttributesGlobMap;\n  if (options.allowedAttributes) {\n    allowedAttributesMap = {};\n    allowedAttributesGlobMap = {};\n    each(options.allowedAttributes, function(attributes, tag) {\n      allowedAttributesMap[tag] = [];\n      const globRegex = [];\n      attributes.forEach(function(obj) {\n        if (typeof obj === 'string' && obj.indexOf('*') >= 0) {\n          globRegex.push(escapeStringRegexp(obj).replace(/\\\\\\*/g, '.*'));\n        } else {\n          allowedAttributesMap[tag].push(obj);\n        }\n      });\n      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n    });\n  }\n  const allowedClassesMap = {};\n  each(options.allowedClasses, function(classes, tag) {\n    // Implicitly allows the class attribute\n    if (allowedAttributesMap) {\n      if (!has(allowedAttributesMap, tag)) {\n        allowedAttributesMap[tag] = [];\n      }\n      allowedAttributesMap[tag].push('class');\n    }\n\n    allowedClassesMap[tag] = classes;\n  });\n\n  const transformTagsMap = {};\n  let transformTagsAll;\n  each(options.transformTags, function(transform, tag) {\n    let transFun;\n    if (typeof transform === 'function') {\n      transFun = transform;\n    } else if (typeof transform === 'string') {\n      transFun = sanitizeHtml.simpleTransform(transform);\n    }\n    if (tag === '*') {\n      transformTagsAll = transFun;\n    } else {\n      transformTagsMap[tag] = transFun;\n    }\n  });\n\n  let depth;\n  let stack;\n  let skipMap;\n  let transformMap;\n  let skipText;\n  let skipTextDepth;\n  let addedText = false;\n\n  initializeState();\n\n  const parser = new htmlparser.Parser({\n    onopentag: function(name, attribs) {\n      // If `enforceHtmlBoundary` is `true` and this has found the opening\n      // `html` tag, reset the state.\n      if (options.enforceHtmlBoundary && name === 'html') {\n        initializeState();\n      }\n\n      if (skipText) {\n        skipTextDepth++;\n        return;\n      }\n      const frame = new Frame(name, attribs);\n      stack.push(frame);\n\n      let skip = false;\n      const hasText = !!frame.text;\n      let transformedTag;\n      if (has(transformTagsMap, name)) {\n        transformedTag = transformTagsMap[name](name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n\n        if (transformedTag.text !== undefined) {\n          frame.innerText = transformedTag.text;\n        }\n\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n      if (transformTagsAll) {\n        transformedTag = transformTagsAll(name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n\n      if ((options.allowedTags && options.allowedTags.indexOf(name) === -1) || (options.disallowedTagsMode === 'recursiveEscape' && !isEmptyObject(skipMap)) || (options.nestingLimit != null && depth >= options.nestingLimit)) {\n        skip = true;\n        skipMap[depth] = true;\n        if (options.disallowedTagsMode === 'discard') {\n          if (nonTextTagsArray.indexOf(name) !== -1) {\n            skipText = true;\n            skipTextDepth = 1;\n          }\n        }\n        skipMap[depth] = true;\n      }\n      depth++;\n      if (skip) {\n        if (options.disallowedTagsMode === 'discard') {\n          // We want the contents but not this tag\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n      result += '<' + name;\n      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n        each(attribs, function(value, a) {\n          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n            // This prevents part of an attribute name in the output from being\n            // interpreted as the end of an attribute, or end of a tag.\n            delete frame.attribs[a];\n            return;\n          }\n          let parsed;\n          // check allowedAttributesMap for the element and attribute and modify the value\n          // as necessary if there are specific values defined.\n          let passedAllowedAttributesMapCheck = false;\n          if (!allowedAttributesMap ||\n            (has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1) ||\n            (allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1) ||\n            (has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a)) ||\n            (allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a))) {\n            passedAllowedAttributesMapCheck = true;\n          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n            for (const o of allowedAttributesMap[name]) {\n              if (isPlainObject(o) && o.name && (o.name === a)) {\n                passedAllowedAttributesMapCheck = true;\n                let newValue = '';\n                if (o.multiple === true) {\n                  // verify the values that are allowed\n                  const splitStrArray = value.split(' ');\n                  for (const s of splitStrArray) {\n                    if (o.values.indexOf(s) !== -1) {\n                      if (newValue === '') {\n                        newValue = s;\n                      } else {\n                        newValue += ' ' + s;\n                      }\n                    }\n                  }\n                } else if (o.values.indexOf(value) >= 0) {\n                  // verified an allowed value matches the entire attribute value\n                  newValue = value;\n                }\n                value = newValue;\n              }\n            }\n          }\n          if (passedAllowedAttributesMapCheck) {\n            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n              if (naughtyHref(name, value)) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (name === 'iframe' && a === 'src') {\n              let allowed = true;\n              try {\n                // Chrome accepts \\ as a substitute for / in the // at the\n                // start of a URL, so rewrite accordingly to prevent exploit.\n                // Also drop any whitespace at that point in the URL\n                value = value.replace(/^(\\w+:)?\\s*[\\\\/]\\s*[\\\\/]/, '$1//');\n                if (value.startsWith('relative:')) {\n                  // An attempt to exploit our workaround for base URLs being\n                  // mandatory for relative URL validation in the WHATWG\n                  // URL parser, reject it\n                  throw new Error('relative: exploit attempt');\n                }\n                // naughtyHref is in charge of whether protocol relative URLs\n                // are cool. Here we are concerned just with allowed hostnames and\n                // whether to allow relative URLs.\n                //\n                // Build a placeholder \"base URL\" against which any reasonable\n                // relative URL may be parsed successfully\n                let base = 'relative://relative-site';\n                for (let i = 0; (i < 100); i++) {\n                  base += `/${i}`;\n                }\n                const parsed = new URL(value, base);\n                const isRelativeUrl = parsed && parsed.hostname === 'relative-site' && parsed.protocol === 'relative:';\n                if (isRelativeUrl) {\n                  // default value of allowIframeRelativeUrls is true\n                  // unless allowedIframeHostnames or allowedIframeDomains specified\n                  allowed = has(options, 'allowIframeRelativeUrls')\n                    ? options.allowIframeRelativeUrls\n                    : (!options.allowedIframeHostnames && !options.allowedIframeDomains);\n                } else if (options.allowedIframeHostnames || options.allowedIframeDomains) {\n                  const allowedHostname = (options.allowedIframeHostnames || []).find(function (hostname) {\n                    return hostname === parsed.hostname;\n                  });\n                  const allowedDomain = (options.allowedIframeDomains || []).find(function(domain) {\n                    return parsed.hostname === domain || parsed.hostname.endsWith(`.${domain}`);\n                  });\n                  allowed = allowedHostname || allowedDomain;\n                }\n              } catch (e) {\n                // Unparseable iframe src\n                allowed = false;\n              }\n              if (!allowed) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'srcset') {\n              try {\n                parsed = parseSrcset(value);\n                parsed.forEach(function(value) {\n                  if (naughtyHref('srcset', value.url)) {\n                    value.evil = true;\n                  }\n                });\n                parsed = filter(parsed, function(v) {\n                  return !v.evil;\n                });\n                if (!parsed.length) {\n                  delete frame.attribs[a];\n                  return;\n                } else {\n                  value = stringifySrcset(filter(parsed, function(v) {\n                    return !v.evil;\n                  }));\n                  frame.attribs[a] = value;\n                }\n              } catch (e) {\n                // Unparseable srcset\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'class') {\n              const allowedSpecificClasses = allowedClassesMap[name];\n              const allowedWildcardClasses = allowedClassesMap['*'];\n              if (allowedSpecificClasses && allowedWildcardClasses) {\n                value = filterClasses(value, deepmerge(allowedSpecificClasses, allowedWildcardClasses));\n              } else {\n                value = filterClasses(value, allowedSpecificClasses || allowedWildcardClasses);\n              }\n              if (!value.length) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'style') {\n              try {\n                const abstractSyntaxTree = postcssParse(name + ' {' + value + '}');\n                const filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n\n                value = stringifyStyleAttributes(filteredAST);\n\n                if (value.length === 0) {\n                  delete frame.attribs[a];\n                  return;\n                }\n              } catch (e) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            result += ' ' + a;\n            if (value && value.length) {\n              result += '=\"' + escapeHtml(value, true) + '\"';\n            }\n          } else {\n            delete frame.attribs[a];\n          }\n        });\n      }\n      if (options.selfClosing.indexOf(name) !== -1) {\n        result += ' />';\n      } else {\n        result += '>';\n        if (frame.innerText && !hasText && !options.textFilter) {\n          result += escapeHtml(frame.innerText);\n          addedText = true;\n        }\n      }\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    },\n    ontext: function(text) {\n      if (skipText) {\n        return;\n      }\n      const lastFrame = stack[stack.length - 1];\n      let tag;\n\n      if (lastFrame) {\n        tag = lastFrame.tag;\n        // If inner text was set by transform function then let's use it\n        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n      }\n\n      if (options.disallowedTagsMode === 'discard' && ((tag === 'script') || (tag === 'style'))) {\n        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n        // script tags is, by definition, game over for XSS protection, so if that's\n        // your concern, don't allow them. The same is essentially true for style tags\n        // which have their own collection of XSS vectors.\n        result += text;\n      } else {\n        const escaped = escapeHtml(text, false);\n        if (options.textFilter && !addedText) {\n          result += options.textFilter(escaped, tag);\n        } else if (!addedText) {\n          result += escaped;\n        }\n      }\n      if (stack.length) {\n        const frame = stack[stack.length - 1];\n        frame.text += text;\n      }\n    },\n    onclosetag: function(name) {\n\n      if (skipText) {\n        skipTextDepth--;\n        if (!skipTextDepth) {\n          skipText = false;\n        } else {\n          return;\n        }\n      }\n\n      const frame = stack.pop();\n      if (!frame) {\n        // Do not crash on bad markup\n        return;\n      }\n      skipText = options.enforceHtmlBoundary ? name === 'html' : false;\n      depth--;\n      const skip = skipMap[depth];\n      if (skip) {\n        delete skipMap[depth];\n        if (options.disallowedTagsMode === 'discard') {\n          frame.updateParentNodeText();\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n\n      if (transformMap[depth]) {\n        name = transformMap[depth];\n        delete transformMap[depth];\n      }\n\n      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n        result = result.substr(0, frame.tagPosition);\n        return;\n      }\n\n      frame.updateParentNodeMediaChildren();\n      frame.updateParentNodeText();\n\n      if (options.selfClosing.indexOf(name) !== -1) {\n        // Already output />\n        if (skip) {\n          result = tempResult;\n          tempResult = '';\n        }\n        return;\n      }\n\n      result += '</' + name + '>';\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    }\n  }, options.parser);\n  parser.write(html);\n  parser.end();\n\n  return result;\n\n  function initializeState() {\n    result = '';\n    depth = 0;\n    stack = [];\n    skipMap = {};\n    transformMap = {};\n    skipText = false;\n    skipTextDepth = 0;\n  }\n\n  function escapeHtml(s, quote) {\n    if (typeof (s) !== 'string') {\n      s = s + '';\n    }\n    if (options.parser.decodeEntities) {\n      s = s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      if (quote) {\n        s = s.replace(/\"/g, '&quot;');\n      }\n    }\n    // TODO: this is inadequate because it will pass `&0;`. This approach\n    // will not work, each & must be considered with regard to whether it\n    // is followed by a 100% syntactically valid entity or not, and escaped\n    // if it is not. If this bothers you, don't set parser.decodeEntities\n    // to false. (The default is true.)\n    s = s.replace(/&(?![a-zA-Z0-9#]{1,20};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n    if (quote) {\n      s = s.replace(/\"/g, '&quot;');\n    }\n    return s;\n  }\n\n  function naughtyHref(name, href) {\n    // Browsers ignore character codes of 32 (space) and below in a surprising\n    // number of situations. Start reading here:\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n    // eslint-disable-next-line no-control-regex\n    href = href.replace(/[\\x00-\\x20]+/g, '');\n    // Clobber any comments in URLs, which the browser might\n    // interpret inside an XML data island, allowing\n    // a javascript: URL to be snuck through\n    href = href.replace(/<!--.*?-->/g, '');\n    // Case insensitive so we don't get faked out by JAVASCRIPT #1\n    // Allow more characters after the first so we don't get faked\n    // out by certain schemes browsers accept\n    const matches = href.match(/^([a-zA-Z][a-zA-Z0-9.\\-+]*):/);\n    if (!matches) {\n      // Protocol-relative URL starting with any combination of '/' and '\\'\n      if (href.match(/^[/\\\\]{2}/)) {\n        return !options.allowProtocolRelative;\n      }\n\n      // No scheme\n      return false;\n    }\n    const scheme = matches[1].toLowerCase();\n\n    if (has(options.allowedSchemesByTag, name)) {\n      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n    }\n\n    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n  }\n\n  /**\n   * Filters user input css properties by whitelisted regex attributes.\n   *\n   * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n   * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n   * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n   * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n   */\n  function filterCss(abstractSyntaxTree, allowedStyles) {\n    if (!allowedStyles) {\n      return abstractSyntaxTree;\n    }\n\n    const filteredAST = klona(abstractSyntaxTree);\n    const astRules = abstractSyntaxTree.nodes[0];\n    let selectedRule;\n\n    // Merge global and tag-specific styles into new AST.\n    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n      selectedRule = deepmerge(\n        allowedStyles[astRules.selector],\n        allowedStyles['*']\n      );\n    } else {\n      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n    }\n\n    if (selectedRule) {\n      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n    }\n\n    return filteredAST;\n  }\n\n  /**\n   * Extracts the style attribues from an AbstractSyntaxTree and formats those\n   * values in the inline style attribute format.\n   *\n   * @param  {AbstractSyntaxTree} filteredAST\n   * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n   */\n  function stringifyStyleAttributes(filteredAST) {\n    return filteredAST.nodes[0].nodes\n      .reduce(function(extractedAttributes, attributeObject) {\n        extractedAttributes.push(\n          attributeObject.prop + ':' + attributeObject.value\n        );\n        return extractedAttributes;\n      }, [])\n      .join(';');\n  }\n\n  /**\n    * Filters the existing attributes for the given property. Discards any attributes\n    * which don't match the whitelist.\n    *\n    * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n    * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n    * @param  {object} attributeObject          - Object representing the current css property.\n    * @property {string} attributeObject.type   - Typically 'declaration'.\n    * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n    * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n    * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n    */\n  function filterDeclarations(selectedRule) {\n    return function (allowedDeclarationsList, attributeObject) {\n      // If this property is whitelisted...\n      if (has(selectedRule, attributeObject.prop)) {\n        const matchesRegex = selectedRule[attributeObject.prop].some(function(regularExpression) {\n          return regularExpression.test(attributeObject.value);\n        });\n\n        if (matchesRegex) {\n          allowedDeclarationsList.push(attributeObject);\n        }\n      }\n      return allowedDeclarationsList;\n    };\n  }\n\n  function filterClasses(classes, allowed) {\n    if (!allowed) {\n      // The class attribute is allowed without filtering on this tag\n      return classes;\n    }\n    classes = classes.split(/\\s+/);\n    return classes.filter(function(clss) {\n      return allowed.indexOf(clss) !== -1;\n    }).join(' ');\n  }\n}\n\n// Defaults are accessible to you so that you can use them as a starting point\n// programmatically if you wish\n\nconst htmlParserDefaults = {\n  decodeEntities: true\n};\nsanitizeHtml.defaults = {\n  allowedTags: [\n    // Sections derived from MDN element categories and limited to the more\n    // benign categories.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n    // Content sectioning\n    'address', 'article', 'aside', 'footer', 'header',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup',\n    'main', 'nav', 'section',\n    // Text content\n    'blockquote', 'dd', 'div', 'dl', 'dt', 'figcaption', 'figure',\n    'hr', 'li', 'main', 'ol', 'p', 'pre', 'ul',\n    // Inline text semantics\n    'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'code', 'data', 'dfn',\n    'em', 'i', 'kbd', 'mark', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby',\n    's', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr',\n    // Table content\n    'caption', 'col', 'colgroup', 'table', 'tbody', 'td', 'tfoot', 'th',\n    'thead', 'tr'\n  ],\n  disallowedTagsMode: 'discard',\n  allowedAttributes: {\n    a: [ 'href', 'name', 'target' ],\n    // We don't currently allow img itself by default, but this\n    // would make sense if we did. You could add srcset here,\n    // and if you do the URL is checked for safety\n    img: [ 'src' ]\n  },\n  // Lots of these won't come up by default because we don't allow them\n  selfClosing: [ 'img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta' ],\n  // URL schemes we permit\n  allowedSchemes: [ 'http', 'https', 'ftp', 'mailto', 'tel' ],\n  allowedSchemesByTag: {},\n  allowedSchemesAppliedToAttributes: [ 'href', 'src', 'cite' ],\n  allowProtocolRelative: true,\n  enforceHtmlBoundary: false\n};\n\nsanitizeHtml.simpleTransform = function(newTagName, newAttribs, merge) {\n  merge = (merge === undefined) ? true : merge;\n  newAttribs = newAttribs || {};\n\n  return function(tagName, attribs) {\n    let attrib;\n    if (merge) {\n      for (attrib in newAttribs) {\n        attribs[attrib] = newAttribs[attrib];\n      }\n    } else {\n      attribs = newAttribs;\n    }\n\n    return {\n      tagName: newTagName,\n      attribs: attribs\n    };\n  };\n};\n","'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet Container = require('./container')\nlet Input = require('./input')\nlet Parser = require('./parser')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","'use strict'\n\nlet Document = require('./document')\nlet LazyResult = require('./lazy-result')\nlet NoWorkResult = require('./no-work-result')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.49'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      !this.plugins.length &&\n      !opts.parser &&\n      !opts.stringifier &&\n      !opts.syntax\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet { nanoid } = require('nanoid/non-secure')\nlet { isAbsolute, resolve } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\nlet terminalHighlight = require('./terminal-highlight')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, content, escape, next, quote\n  let currentToken, escaped, escapePos, n, prev\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nlet { dirname, relative, resolve, sep } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.originalCSS = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = null\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.startsWith('# sourceMappingURL=')) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      })\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let last, lines\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.originalCSS, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nfunction sourceOffset(inputCSS, position) {\n  // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n  if (\n    position &&\n    typeof position.offset !== 'undefined'\n  ) {\n    return position.offset;\n  }\n\n  let column = 1\n  let line = 1\n  let offset = 0\n\n  for (let i = 0; i < inputCSS.length; i++) {\n    if (line === position.line && column === position.column) {\n      offset = i\n      break\n    }\n\n    if (inputCSS[i] === '\\n') {\n      column = 1\n      line += 1\n    } else {\n      column += 1\n    }\n  }\n\n  return offset\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  /* c8 ignore next 3 */\n  markClean() {\n    this[isClean] = true\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  positionInside(index) {\n    let column = this.source.start.column\n    let line = this.source.start.line\n    let offset = sourceOffset(this.source.input.css, this.source.start)\n    let end = offset + index\n\n    for (let i = offset; i < end; i++) {\n      if (this.source.input.css[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n          column: this.source.end.column + 1,\n          line: this.source.end.line\n        }\n      : {\n          column: start.column + 1,\n          line: start.line\n        }\n\n    if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(\n          index + opts.word.length,\n        )\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (typeof opts.endIndex === 'number') {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nconst Result = require('./result')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    } else {\n      map.clearAnnotation()\n      this.result.css = map.css\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","'use strict'\n\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    let uriMatch = text.match(charsetUri) || text.match(uri)\n    if (uriMatch) {\n      return decodeURIComponent(text.substr(uriMatch[0].length))\n    }\n\n    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri)\n    if (baseUriMatch) {\n      return fromBase64(text.substr(baseUriMatch[0].length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Input = require('./input')\nlet PreviousMap = require('./previous-map')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Node = require('./node')\nlet { isClean, my } = require('./symbols')\n\nlet AtRule, parse, Root, Rule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markTreeDirty(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markTreeDirty(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(\n      add,\n      this.proxyOf.nodes[existIndex],\n      type\n    ).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (typeof nodes === 'undefined') {\n      nodes = []\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector || nodes.selectors) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markTreeDirty(i)\n\n      if (!i.raws) i.raws = {}\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n"],"sourceRoot":""}